# Replica 설정 (dev 환경에서는 1개, 운영에서는 3개)
replicaCount: 1

# 컨테이너 이미지 설정 (Azure ACR 사용)
image:
  repository: metabank.azurecr.io/metanet-msa-migration-be-java
  pullPolicy: IfNotPresent
  tag: "1739428415"

# 환경 변수 설정
env:
  - name: ENVIRONMENT
    value: "dev"

# Image Pull Secrets (ACR 접근을 위한 설정, 필요시 추가)
imagePullSecrets:
  - name: acr-secret

# 서비스 계정 설정
serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: ""

# Pod Annotations & Labels
podAnnotations: {}
podLabels: {}

# Pod Security Context (선택)
podSecurityContext: {}

# 컨테이너 Security Context (선택)
securityContext: {}

# Service 설정
service:
  type: ClusterIP
  port: 8080  # ✅ Spring Boot 실행 포트에 맞춤

tls: []
#  - secretName: chart-example-tls
#    hosts:
#      - metanet-dev.example.com

# 리소스 설정 (개발 환경 기준)
resources:
  requests:
    cpu: 250m
    memory: 512Mi
  limits:
    cpu: 500m
    memory: 1024Mi

# Liveness & Readiness Probes
livenessProbe:
  httpGet:
    path: /actuator/health  # ✅ Spring Boot Actuator 헬스 체크 엔드포인트로 변경
    port: 8080
  initialDelaySeconds: 15  # ✅ 앱이 시작될 시간을 벌기 위해 초기 지연 추가
  periodSeconds: 10
  failureThreshold: 5

readinessProbe:
  httpGet:
    path: /actuator/health  # ✅ Readiness Probe도 Actuator 경로로 변경
    port: 8080
  initialDelaySeconds: 20  # ✅ Spring Boot 앱이 충분히 기동될 시간 부여
  periodSeconds: 10
  failureThreshold: 5

# 자동 확장 (선택)
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80

# 노드 선택 및 Tolerations
nodeSelector: {}
tolerations: []
affinity: {}
