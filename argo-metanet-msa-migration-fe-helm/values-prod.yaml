# Replica 설정 (dev 환경에서는 1개, 운영에서는 3개)
replicaCount: 1

# 컨테이너 이미지 설정 (Azure ACR 사용)
image:
  repository: metabank.azurecr.io/metanet-msa-migration-fe
  pullPolicy: IfNotPresent
  tag: "1739373904"

environment: dev

# Image Pull Secrets (ACR 접근을 위한 설정, 필요시 추가)
imagePullSecrets: []
# 예시:
# imagePullSecrets:
#   - name: acr-secret

# 서비스 계정 설정
serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: ""

# Pod Annotations & Labels
podAnnotations: {}
podLabels: {}

# Pod Security Context (선택)
podSecurityContext: {}

# 컨테이너 Security Context (선택)
securityContext: {}

# Service 설정
service:
  type: ClusterIP  # 내부 네트워크용
  port: 8080  # 포트 변경

# Ingress 설정 (선택)
ingress:
  enabled: true  # Ingress 활성화
  className: "nginx"
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
  hosts:
    - host: metanet-dev.example.com
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - metanet-dev.example.com

# 리소스 설정 (개발 환경 기준)
resources:
  requests:
    cpu: "250m"
    memory: "512Mi"
  limits:
    cpu: "500m"
    memory: "1024Mi"

# Liveness & Readiness Probes
livenessProbe:
  httpGet:
    path: /
    port: 8080
readinessProbe:
  httpGet:
    path: /
    port: 8080

# 자동 확장 (선택)
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80

# 추가 환경 변수 설정
env:
  ENVIRONMENT: dev
  DATABASE_URL: "jdbc:mysql://metanet-db:3306/dev-db"
  REDIS_HOST: "metanet-redis"

# 노드 선택 및 Tolerations
nodeSelector: {}
tolerations: []
affinity: {}
